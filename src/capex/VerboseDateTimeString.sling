
/*
 * This file is part of Jkop
 * Copyright (c) 2016 Job and Esther Technologies, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class imports cape:

func forNow static as string
{
	return(forDatetime(DateTime.forNow()))
}

func getShortDayName(n as int) private static as string
{
	switch(n) {
		case 1: {
			return("Sun")
		}
		case 2: {
			return("Mon")
		}
		case 3: {
			return("Tue")
		}
		case 4: {
			return("Wed")
		}
		case 5: {
			return("Thu")
		}
		case 6: {
			return("Fri")
		}
		case 7: {
			return("Sat")
		}
	}
	return(null)
}

func getShortMonthName(n as int) private static as string
{
	switch(n) {
		case 1: {
			return("Jan")
		}
		case 2: {
			return("Feb")
		}
		case 3: {
			return("Mar")
		}
		case 4: {
			return("Apr")
		}
		case 5: {
			return("May")
		}
		case 6: {
			return("Jun")
		}
		case 7: {
			return("Jul")
		}
		case 8: {
			return("Aug")
		}
		case 9: {
			return("Sep")
		}
		case 10: {
			return("Oct")
		}
		case 11: {
			return("Nov")
		}
		case 12: {
			return("Dec")
		}
	}
	return(null)
}

func forDatetime(dd as DateTime) static as string
{
	if(dd == null) {
		return("NODATE")
	}
	var sb = new StringBuilder()
	sb.append(getShortDayName(dd.getWeekDay()))
	sb.append(", ")
	sb.append(String.forIntegerWithPadding(dd.getDayOfMonth(), 2, "0"))
	sb.append(' ')
	sb.append(getShortMonthName(dd.getMonth()))
	sb.append(' ')
	sb.append(String.forInteger(dd.getYear()))
	sb.append(' ')
	sb.append(String.forIntegerWithPadding(dd.getHours(), 2, "0"))
	sb.append(':')
	sb.append(String.forIntegerWithPadding(dd.getMinutes(), 2, "0"))
	sb.append(':')
	sb.append(String.forIntegerWithPadding(dd.getSeconds(), 2, "0"))
	sb.append(" GMT")
	return(sb.toString())
}
