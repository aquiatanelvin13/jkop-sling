
/*
 * This file is part of Jkop
 * Copyright (c) 2016 Job and Esther Technologies, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

IFDEF("target_posix") {
	lang "c" {{{
		#include <uninstd.h>
		#include <sys/types.h>
		#include <pwd.h>
	}}}
}

class PosixUser public
{
	prop pwName as string
	prop pwUid as int
	prop pwGid as int
	prop pwGecos as string
	prop pwDir as string
	prop pwShell as string
}

func getpwnam(username as string) static as PosixUser
{
	IFDEF("target_posix") {
		if(username == null) {
			return(null)
		}
		var _name as string = null
		var _gecos as string = null
		var _dir as string = null
		var _shell as string = null
		var _uid as int
		var _gid as int
		lang "c" {{{
			struct passwd pwd;
			struct passwd *result = NULL;
			char buffer[8192 * 4];
			getpwnam_r(sp, &pwd, buffer, 8192*4, & result);
			if(result != NULL) {
				_name = result->pw_name;
				_gecos = result->pw_gecos;
				_dir = result->pw_dir;
				_shell = result->pw_shell;
				_uid = result->pw_uid;
				_gid = result->pw_gid;
			}
		}}}
		if(_name == null) {
			return(null)
		}
		var v = new PosixUser()
		v.setPwName(_name)
		v.setPwUid(_uid)
		v.setPwGid(_gid)
		v.setPwGecos(_gecos)
		v.setPwDir(_dir)
		v.setPwShell(_shell)
		return(v)
	}
	ELSE {
		return(null)
	}
}

func getpwuid(uid as int) static as PosixUser
{
	IFDEF("target_posix") {
		var _name as string = null
		var _gecos as string = null
		var _dir as string = null
		var _shell as string = null
		var _uid as int
		var _gid as int
		lang "c" {{{
			struct passwd pwd;
			struct passwd *result = NULL;
			char buffer[8192 * 4];
			getpwuid_r(uid, &pwd, buffer, 8192*4, & result);
			if(result != NULL) {
				_name = result->pw_name;
				_gecos = result->pw_gecos;
				_dir = result->pw_dir;
				_shell = result->pw_shell;
				_uid = result->pw_uid;
				_gid = result->pw_gid;
			}
		}}}
		if(_name == null) {
			return(null)
		}
		var v = new PosixUser()
		v.setPwName(_name)
		v.setPwUid(_uid)
		v.setPwGid(_gid)
		v.setPwGecos(_gecos)
		v.setPwDir(_dir)
		v.setPwShell(_shell)
		return(v)
	}
	ELSE {
		return(null)
	}
}

func setuid(gid as int) static as bool
{
	IFDEF("target_posix") {
		var v = false
		lang "c" {{{
			if(setuid(uid) == 0) {
				v = 1;
			}
		}}}
		return(v)
	}
	ELSE {
		return(false)
	}
}

func setgid(gid as int) static as bool
{
	IFDEF("target_posix") {
		var v = false
		lang "c" {{{
			if(setgid(gid) == 0) {
				v = 1;
			}
		}}}
		return(v)
	}
	ELSE {
		return(false)
	}
}

func seteuid(uid as int) static as bool
{
	IFDEF("target_posix") {
		var v = false
		lang "c" {{{
			if(seteuid(uid) == 0) {
				v = 1;
			}
		}}}
		return(v)
	}
	ELSE {
		return(false)
	}
}

func setegid(gid as int) static as bool
{
	IFDEF("target_posix") {
		var v = false
		lang "c" {{{
			if(setegid(gid) == 0) {
				v = 1;
			}
		}}}
		return(v)
	}
	ELSE {
		return(false)
	}
}

func getuid static as int
{
	IFDEF("target_posix") {
		var v as int
		lang "c" {{{
			v = getuid();
		}}}
		return(v)
	}
	ELSE {
		return(-1)
	}
}

func geteuid static as int
{
	IFDEF("target_posix") {
		var v as int
		lang "c" {{{
			v = geteuid();
		}}}
		return(v)
	}
	ELSE {
		return(-1)
	}
}

func getgid static as int
{
	IFDEF("target_posix") {
		var v as int
		lang "c" {{{
			v = getgid();
		}}}
		return(v)
	}
	ELSE {
		return(-1)
	}
}

func getegid static as int
{
	IFDEF("target_posix") {
		var v as int
		lang "c" {{{
			v = getegid();
		}}}
		return(v)
	}
	ELSE {
		return(-1)
	}
}