
/*
 * This file is part of Jkop
 * Copyright (c) 2016 Job and Esther Technologies, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is CharacterDecoder is Duplicateable:

var buffer as buffer
var currentPosition as int = -1

ctor private
{
}

ctor(buffer as buffer)
{
	this.buffer = buffer
}

func moveToPreviousByte override as bool
{
	if(currentPosition < 1) {
		return(false)
	}
	currentPosition --
	return(true)
}

func moveToNextByte override as bool
{
	if(currentPosition+1 >= Buffer.getSize(buffer)) {
		return(false)
	}
	currentPosition++
	return(true)
}

func getCurrentByte override as int
{
	return(Buffer.getByte(buffer, currentPosition))
}

func duplicate as object
{
	var v = new this()
	base.copyTo(v)
	v.buffer = buffer
	v.currentPosition = currentPosition
	return(v)
}
